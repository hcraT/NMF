% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NMFSet-class.R
\docType{class}
\name{NMFfitX1-class}
\alias{NMFfitX1-class}
\alias{show,NMFfitX1-method}
\alias{nrun,NMFfitX1-method}
\alias{consensus,NMFfitX1-method}
\alias{minfit,NMFfitX1-method}
\alias{fit,NMFfitX1-method}
\alias{getRNG1,NMFfitX1-method}
\alias{nmf.equal,NMFfitX1,NMFfitX1-method}
\title{Structure for Storing the Best Fit Amongst Multiple NMF Runs}
\usage{
\S4method{show}{NMFfitX1}(object)

\S4method{nrun}{NMFfitX1}(object)

\S4method{consensus}{NMFfitX1}(object, no.attrib = FALSE)

\S4method{minfit}{NMFfitX1}(object)

\S4method{fit}{NMFfitX1}(object)

\S4method{getRNG1}{NMFfitX1}(object)

\S4method{nmf.equal}{NMFfitX1,NMFfitX1}(x, y, ...)
}
\arguments{
\item{object}{an object of class \code{NMFfitX}.}

\item{no.attrib}{a single logical that indicates that no extra attributes
should be attached to the result matrix.
If \code{TRUE}, then the following attributes are attached:
\itemize{
\item \code{nrun}: number of algorithm runs performed;
\item \code{nbasis}: number of basis components of the fitted model;
}

Also, in this case, the result gains an extra S3 class \code{NMF.consensus}.}

\item{x, y}{objects of class \code{NMFfitX1}, whose fitted models are compared.}

\item{...}{other arguments passed to subsequent calls of suitable methods, usually of the same generic.}
}
\description{
This class is used to return the result from a multiple run of a single NMF
algorithm performed with function \code{nmf} with the -- default -- option
\code{keep.all=FALSE} (cf. \code{\link{nmf}}).
}
\details{
It extends both classes \code{\linkS4class{NMFfitX}} and
\code{\linkS4class{NMFfit}}, and stores a the result of the best fit in its
\code{NMFfit} structure.

Beside the best fit, this class allows to hold data about the computation of
the multiple runs, such as the number of runs, the CPU time used to perform
all the runs, as well as the consensus matrix.

Due to the inheritance from class \code{NMFfit}, objects of class
\code{NMFfitX1} can be handled exactly as the results of single NMF run --
as if only the best run had been performed.
}
\section{Slots}{

\describe{
\item{\code{consensus}}{object of class \code{matrix} used to store the
consensus matrix based on all the runs.}

\item{\code{nrun}}{an \code{integer} that contains the number of runs
performed to compute the object.}

\item{\code{rng1}}{an object that contains RNG settings used for the first
run. See \code{\link{getRNG1}}.}
}}

\examples{

# generate a synthetic dataset with known classes
n <- 20; counts <- c(5, 2, 3);
V <- syntheticNMF(n, counts)

# get the class factor
groups <- V$pData$Group

# perform multiple runs of one algorithm, keeping only the best fit (default)
#i.e.: the implicit nmf options are .options=list(keep.all=FALSE) or .options='-k'
res <- nmf(V, 3, nrun=3) 
res

# compute summary measures
summary(res)
# get more info
summary(res, target=V, class=groups)

# show computational time
runtime.all(res)

# plot the consensus matrix, as stored (pre-computed) in the object
\dontrun{ consensusmap(res, annCol=groups) }

}
\seealso{
Other multipleNMF: 
\code{\link{NMFfitX-class}},
\code{\link{NMFfitXn-class}}
}
\concept{multipleNMF}
\section{Methods (by generic)}{
\itemize{
\item \code{show(object = NMFfitX1)}: Show method for objects of class \code{NMFfitX1}

\item \code{nrun(object = NMFfitX1)}: Returns the number of NMF runs performed, amongst which \code{object} was
selected as the best fit.

\item \code{consensus(object = NMFfitX1)}: Returns the consensus matrix computed while performing all NMF runs,
amongst which \code{object} was selected as the best fit.

The result is the matrix stored in slot \sQuote{consensus}.
This method returns \code{NULL} if the consensus matrix is empty.

\item \code{minfit(object = NMFfitX1)}: Returns the fit object associated with the best fit, amongst all the
runs performed when fitting \code{object}.

Since \code{NMFfitX1} objects only hold the best fit, this method simply
returns \code{object} coerced into an \code{NMFfit} object.

\item \code{fit(object = NMFfitX1)}: Returns the model object associated with the best fit, amongst all the
runs performed when fitting \code{object}.

Since \code{NMFfitX1} objects only hold the best fit, this method simply
returns the NMF model fitted by \code{object} -- that is stored in slot
\sQuote{fit}.

\item \code{getRNG1(object = NMFfitX1)}: Returns the RNG settings used to compute the first of all NMF runs, amongst
which \code{object} was selected as the best fit.

\item \code{nmf.equal(x = NMFfitX1,y = NMFfitX1)}: Compares the NMF models fitted by multiple runs, that only kept the best fits.
}}

