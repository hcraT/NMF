% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NMFStrategy-class.R
\name{NMFStrategy}
\alias{NMFStrategy}
\alias{NMFStrategy,character,function-method}
\alias{NMFStrategy,missing,character-method}
\alias{NMFStrategy,character,character-method}
\alias{NMFStrategy,NULL,character-method}
\alias{NMFStrategy,character,missing-method}
\title{Factory Method for NMFStrategy Objects}
\usage{
NMFStrategy(name, method, ...)

\S4method{NMFStrategy}{character,`function`}(name, method, ...)

\S4method{NMFStrategy}{missing,character}(name, method, ...)

\S4method{NMFStrategy}{character,character}(name, method, ...)

\S4method{NMFStrategy}{`NULL`,character}(name, method, ...)

\S4method{NMFStrategy}{character,missing}(name, method, ...)
}
\arguments{
\item{name}{name/key of an NMF algorithm.}

\item{method}{definition of the algorithm}

\item{...}{extra arguments passed to \code{\link{new}}.}
}
\description{
Creates NMFStrategy objects that wraps implementation of NMF algorithms into
a unified interface.
}
\section{Methods (by generic)}{
\bold{nmfFormals:}

\itemize{
\item \code{nmfFormals(NMFStrategy)}: Returns the extra arguments that can be passed to an algorithm encapsulated in an \code{NMFStrategy} object.

Arguments that have default values defined by the strategy are set accordingly.
}


\bold{NMFStrategy:}

\itemize{
\item \code{NMFStrategy(name = character,method = NMFStrategy)}: Creates an \code{NMFStrategy} object based on a template object (Constructor-Copy).

\item \code{NMFStrategy(name = NMFStrategy,method = missing)}: Creates an \code{NMFStrategy} based on a template object (Constructor-Copy),
in particular it uses the \strong{same} name.

\item \code{NMFStrategy(name = NULL,method = NMFStrategy)}: Creates an \code{NMFStrategy} based on a template object (Constructor-Copy)
but using a randomly generated name.

\item \code{NMFStrategy(name = character,method = function)}: Creates an \code{NMFStrategyFunction} object that wraps the function \code{method}
into a unified interface.

\code{method} must be a function with signature \code{(y="matrix", x="NMFfit", ...)},
and return an object of class \code{\linkS4class{NMFfit}}.

\item \code{NMFStrategy(name = missing,method = character)}: Creates an \code{NMFStrategy} based on a registered NMF algorithm that is used
as a template (Constructor-Copy), in particular it uses the \strong{same} name.

It is a shortcut for \code{NMFStrategy(nmfAlgorithm(method, exact=TRUE), ...)}.

\item \code{NMFStrategy(name = character,method = character)}: Creates an \code{NMFStrategy} based on a registered NMF algorithm that is used
as a template.

\item \code{NMFStrategy(name = NULL,method = character)}: Creates an \code{NMFStrategy} based on a registered NMF algorithm (Constructor-Copy)
using a randomly generated name.

It is a shortcut for \code{NMFStrategy(NULL, nmfAlgorithm(method), ...)}.

\item \code{NMFStrategy(name = character,method = missing)}: Creates an NMFStrategy, determining its type from the extra arguments passed
in \code{...}: if there is an argument named \code{Update} then an
\code{NMFStrategyIterative} is created, or if there is an argument
named \code{algorithm} then an \code{NMFStrategyFunction} is created.
Calls other than these generates an error.
}

}

